package lab5;

public class BorrowingService implements BorrowingServiceAPI{
	BorrowingBookResult result;
	boolean isSuccess;
	String borrowingMessage;
	@Override
	// Here you can implement logic to check if the book is available to
	// borrow and if the member can borrow it
	//(e.g., item limit, member status).
	public BorrowingBookResult borrowBook(Member member, Book book) {
		if(member.getBorrowedBooks().size()>3) {// customer has more than 3 borrowed books
			isSuccess = false;
			borrowingMessage= "The member has exceeded their borrowing limit";
		}
		else if(!book.getIsAvailable()) {
			isSuccess = false;
			borrowingMessage="";
			for(Book a : member.getBorrowedBooks()) {
				if(book.getTitle().equals(a.getTitle())) {
					borrowingMessage = "The book is already borrowed by the same member";
				}
			}
			if(borrowingMessage.equals("")) {
				borrowingMessage= "The member has exceeded their borrowing limit";
			}
		}
		System.out.println(borrowingMessage + book);
		return result = new BorrowingBookResult(isSuccess, null); // Return true for success
	}
		@Override
		public BorrowingBookResult returnBook(Member member, Book book) {
		// Implement logic to handle returning a book
		System.out.println("Returning book: " + book);
		return result = new BorrowingBookResult(false, null);
		}

}
